@page "/new_chat"
@layout Loginlayout

<div class="main">
    <input type="checkbox" id="chk" aria-hidden="true">
    <div class="New-Chat">
        <EditForm Model="Chat">
            <button class="oi oi-x" aria-hidden="true" id="cross" @onclick=@(() => NavigationManager.NavigateTo("/StartPage"))></button>
            <label for="chk" aria-hidden="true">Singel Chat</label>
            <div class="Chat-Form-Container">
                <input @bind-value="@UserToAdd.UserName" type="text" id="singleChatMember" name="txt" placeholder="Username" required="">
                <input @bind-value="@Chat.Name"type="text" name="txt" placeholder="Chatname" required="">
                <div class="New-Chat-FieldContainer">
                    <p style="margin: 1px!important; color: white;" >Encryption</p>
                    <input type="radio" id="isEncrypted" name="Encryption" value="True" @onchange="@(() => UpdateBool("true"))">
                    <label for="isEncrypted">On</label>
                    <input type="radio" id="isEncrypted" name="Encryption" value="True" @onchange="@(() => UpdateBool("false"))">
                    <label for="isEncrypted">Off</label>
                </div>
                <button class="create" @onclick=@(() => CreateChat(Chat))>Start Chat</button>
            </div>
        </EditForm>
    </div>

    <div class="New-Group-Chat">
        <EditForm Model="UserList">
            <label for="chk" aria-hidden="true">Group Chat</label>
            <div class="Chat-Form-Container">
            <input @bind-value="@User.UserName" type="text" id="chatMember1" name="txt" placeholder="User 1" required="">
            <input @bind-value="@User.UserName" type="text" name="txt" id="chatMember2" placeholder="User 2" required="">
                <div class="New-Chat-FieldContainer">
                    <p style="margin: 1px!important;" >Encryption</p>
                    <input type="radio" id="isEncrypted" name="Encryption" value="True" @onchange="@(() => UpdateBool("true"))">
                    <label for="isEncrypted">On</label>
                    <input type="radio" id="isEncrypted" name="Encryption" value="True" @onchange="@(() => UpdateBool("false"))">
                    <label for="isEncrypted">Off</label>
                </div>
            <button class="create"@onclick=@(() => CreateChat(Chat))>Start Group Chat</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    ChatModel Chat { get; set; } = new();
    UserModel User { get; set; } = new();
    List<UserChat> UserChatList { get; set; } = new();
    UserModel UserToAdd { get; set; } = new();
    List<UserModel> UserList { get; set; } = new();
    protected override async Task OnInitializedAsync()
    {
        var currentUser = await UserService.GetUserClaim();
        if(currentUser.user == null)
            throw new Exception("User was not found!");
        
        User = currentUser.user;
    }

    private async Task AddUser(ChatModel chatModel)
    {
        
    }
    private async Task CreateChat(ChatModel chatModel)
    {
        var userToAdd = await UserService.GetUser(UserToAdd.UserName);
        var userChatList = await UserService.GetAllUsers();
        

        chatModel.CreatorId = User.Id;
        chatModel.Users = new List<UserChat>()
        {
            new()
            {
                UserId = userToAdd.Id,
                ChatId = chatModel.Id
            },
            new()
            {
                UserId = User.Id,
                ChatId = chatModel.Id
            }
        };
        
        await ChatService.CreateChat(chatModel);
        NavigationManager.NavigateTo("/conversations");
    }

    private void UpdateBool(string decision)
    {
        if (decision == "true")
            Chat.IsChatEncrypted = true;

        if (decision != "true")
            Chat.IsChatEncrypted = false;

    }
}