@inject IChatService ChatService
@inject IUserService UserService
@inject NavigationManager NavigationManager
@*
@inject MessageService MessageService
*@

@page "/ChatPage"

<h3>ChatPage</h3>
<div class="oi-chat">
   @foreach (var message in MessagesInChat){
      @if (message.IsMessageDeleted != true){ //for readability != true is added.
       <p>@message.Message</p>
             <p>from: @message.User</p>
             @if (message.IsMessageEdited){<p>Message is edited.</p>}
             <br/>  
      }
      
   }


</div>
<div class="oi-align-right">
   <h2>Chat members:</h2>
   <p>@Chat.Users</p>
</div>



<EditForm Model="Chat" OnValidSubmit="CreateChat">
   <InputText @bind-Value="Chat.Name" placeholder="Chat name"></InputText>
</EditForm>

@foreach (var item in Chats){
   <h1>@item.Name</h1>
}

@code {
   ChatModel Chat { get; set; } = new();
   List<MessageModel> MessagesInChat { get; set; } = new();
   
   UserModel User { get; set; } = new();
   List<ChatModel> Chats { get; set; } = new();
   UserModel UserToAdd { get; set; } = new();

   //the value that was passed along with the url.
   private int _receivedNr;

   /*protected override void OnInitialized(){
      string absoluteUriString = NavigationManager.ToAbsoluteUri(NavigationManager.Uri).ToString();
      _receivedNr = int.Parse(absoluteUriString.Split("?")[1].Split("=")[1]);

      //method called
      GetChat(_receivedNr);
      // chat not iterable object :(
      
      //getting messages by ChatId, less data traversing = faster application.
      GetMessageByChatId(_receivedNr);
   }

   private async void GetMessageByChatId(int chatid){
      try{
         MessagesInChat = await MessageService.GetMessageByChatId(chatid);
      }
      catch (Exception e){
         Console.WriteLine(e);
         throw;
      }
   }*/

   private async void GetChat(int nr){
       //get the chat using the chatId
      try{
         Chat = await ChatService.GetChatById(nr);
      }
      catch (Exception e){
         Console.WriteLine("Could not get chat! :( ");
         Console.WriteLine(e.Message);
         Console.WriteLine(e.StackTrace);
      }
   }


   //is below used anywhere?
   private async Task CreateChat(){
      var getuser = await UserService.GetUserClaim();
      if (getuser.Message == "Success"){
         User = getuser.user;
         if (User != null){
            Chat.ChatCreated = DateTime.Now;
            Chat.UserId = User.Id;
            Chat.CreatorId = User.Id;
            await ChatService.CreateChat(Chat);
            foreach (var item in User.Chats){
               Chats.Add(item);
            }
         }
      }
   }

}