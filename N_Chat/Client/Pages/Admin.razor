@inject NavigationManager NavManeger
@page "/Admin"

@if(UserList != null){
    foreach(var User in UserList)
    {
    <div class="card">
        <div class="card-body">
            <h2 style="color:black">@User.UserName</h2>
            <div style="width: 100%; overflow: hidden;">
                <div style="float: left; color:black">@User.Id</div>
                <div style="float: right;">
                    <button class="btn btn-danger" @onclick="@(() => DeleteUser(User.UserName))">Delete User </button>
                </div>
            </div>
        </div>
    </div>
    }
}


<h1 class="text-white">------------------------------------------------------------------------------------</h1>

@if(ChatList != null){
    foreach (var Chat in ChatList)
    {
    <div class="card">
        <div class="card-body">
            <h2 style="color:black">@Chat.Name</h2>
            <div style="width: 100%; overflow: hidden;">
                <div style="float: left; color:black">@Chat.Id</div>
                <div style="float: right;">
                    <button class="btn btn-danger" @onclick="@(() => DeleteChat(Chat.Id))">Delet Chat </button>
                </div>
            </div>
        </div>
    </div>
    }  
}


@code {
    ICollection<UserModel>? UserList { get; set; } = new List<UserModel>();
    ICollection<ChatModel>? ChatList { get; set; } = new List<ChatModel>();
    UserModel CurrentUser = new();
    UserModel UsertToBeDeleted = new();
    ChatModel ChatToBeDeleted = new();


    protected override async Task OnInitializedAsync()
    {
        var user = await UserService.GetUserClaim();
        CurrentUser = user.user;
        UserList = await UserService.GetAllUsers();
        ChatList = await ChatService.GetChats();
        StateHasChanged();

    }

    public async Task DeleteUser(String UserName)
    {
        UsertToBeDeleted = await UserService.GetUser(UserName);
        UsertToBeDeleted.isDeleted = true;
        Console.WriteLine(UsertToBeDeleted);
        await UserService.UpdateUser(UsertToBeDeleted, UserName);
    }

    public async Task DeleteChat(int id)
    {
        ChatToBeDeleted= await ChatService.GetChatById(id);
        ChatToBeDeleted.IsChatEnded = true;
        Console.WriteLine(ChatToBeDeleted);
        await ChatService.UpdateChat(ChatToBeDeleted, id);
    }




}

