@inject IUserService UserService;
@inject NavigationManager NavigationManager;
@layout Loginlayout
@page "/Login"

<div class="main">
	<input type="checkbox" id="chk" aria-hidden="true">
	<div class="login">
		<EditForm Model="user" OnValidSubmit="LoginUser">
			<label for="chk" aria-hidden="true">Login</label>
			<input @bind-value="user.Username" type="Username" placeholder="Username" required=""></input>
			<input @bind-value="user.Password" type="password" placeholder="Password" required=""></input>
			<button type="submit" href="/">Login</button>
		</EditForm>
	</div>

	<div class="signup">
		<form>
			<label for="chk" aria-hidden="true">Sign up</label>
			<input type="text" name="txt" placeholder="Username" required="">
			<input type="email" name="email" placeholder="Email" required="">
			<input type="password" name="pswd" placeholder="Password" required="">
			<button href="/">Sign up</button>
		</form>
	</div>
</div>

@code {
	[Parameter]
	public LoginModel user { get; set; } = new();

	//type="email" name="email" placeholder="Email" required=""
	//type="password" name="pswd" placeholder="Password" required=""
	public async Task LoginUser()
	{
		string result = await UserService.LoginUser(user);
		Console.WriteLine(result);
		NavigationManager.NavigateTo("/");
		StateHasChanged();
	}
}
